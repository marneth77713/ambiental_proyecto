<?php
session_start();

function mostrarMensaje($tipo, $mensaje) {
    $_SESSION[$tipo] = $mensaje;
}

// Proyecto de demostración completo
$proyecto_demo = [
    'nombre' => 'Proyecto de Demostración',
    'descripcion' => 'Este es un proyecto de demostración completo que muestra las capacidades del editor.',
    'color' => '#f8f9fa',
    'elementos' => [
        ['tipo' => 'texto', 'contenido' => 'PROYECTO INTERACTIVO', 'estilo' => 'font-size: 48px; font-weight: bold; color: #2c3e50; text-align: center; width: 600px;', 'posicion' => ['x' => 300, 'y' => 50], 'zIndex' => 10],
        ['tipo' => 'texto', 'contenido' => 'Creado con el Editor de Proyectos', 'estilo' => 'font-size: 20px; color: #7f8c8d; text-align: center; width: 400px;', 'posicion' => ['x' => 400, 'y' => 120], 'zIndex' => 9],
        ['tipo' => 'forma', 'estilo' => 'width: 800px; height: 4px; background-color: #3498db; border-radius: 2px;', 'posicion' => ['x' => 200, 'y' => 160], 'zIndex' => 8],
        ['tipo' => 'texto', 'contenido' => 'Introducción', 'estilo' => 'font-size: 32px; font-weight: bold; color: #2c3e50;', 'posicion' => ['x' => 100, 'y' => 200], 'zIndex' => 7],
        ['tipo' => 'texto', 'contenido' => 'Este proyecto demuestra las diferentes funcionalidades disponibles en el editor.', 'estilo' => 'font-size: 16px; color: #2c3e50; width: 600px; line-height: 1.5;', 'posicion' => ['x' => 100, 'y' => 250], 'zIndex' => 6],
        ['tipo' => 'forma', 'estilo' => 'width: 300px; height: 300px; background-color: rgba(52, 152, 219, 0.1); border: 2px solid #3498db; border-radius: 8px;', 'posicion' => ['x' => 100, 'y' => 350], 'zIndex' => 5],
        ['tipo' => 'texto', 'contenido' => 'Características', 'estilo' => 'font-size: 24px; font-weight: bold; color: #3498db; text-align: center; width: 300px;', 'posicion' => ['x' => 100, 'y' => 370], 'zIndex' => 15],
        ['tipo' => 'texto', 'contenido' => '• Textos editables\n• Formas personalizables\n• Imágenes insertables', 'estilo' => 'font-size: 16px; color: #2c3e50; white-space: pre-line; width: 250px;', 'posicion' => ['x' => 125, 'y' => 420], 'zIndex' => 14]
    ]
];

// Plantillas predefinidas con temática medioambiental e imágenes
$plantillas = [
    [
        'nombre' => 'Hoja en Blanco',
        'imagen' => '',
        'color' => '#ffffff',
        'elementos' => []
    ],
    [
        'nombre' => 'Conservación Forestal',
        'imagen' => '',
        'color' => '#e8f5e9',
        'elementos' => [
            ['tipo' => 'texto', 'contenido' => 'CONSERVACIÓN FORESTAL', 'estilo' => 'font-size: 48px; font-weight: bold; color: #2e7d32; text-align: center; width: 800px;', 'posicion' => ['x' => 212, 'y' => 50], 'zIndex' => 10],
            ['tipo' => 'texto', 'contenido' => 'Protegiendo nuestros bosques para un futuro sostenible', 'estilo' => 'font-size: 22px; color: #558b2f; text-align: center; width: 600px;', 'posicion' => ['x' => 312, 'y' => 120], 'zIndex' => 9],
            ['tipo' => 'forma', 'estilo' => 'width: 800px; height: 5px; background-color: #43a047; border-radius: 2px;', 'posicion' => ['x' => 212, 'y' => 160], 'zIndex' => 8],

            // Imagen principal
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1511497584788-876760111969?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1000&q=80', 'estilo' => 'width: 800px; height: 300px; object-fit: cover; border-radius: 8px;', 'posicion' => ['x' => 212, 'y' => 180], 'zIndex' => 7],

            // Sección de introducción
            ['tipo' => 'texto', 'contenido' => 'Introducción', 'estilo' => 'font-size: 32px; font-weight: bold; color: #2e7d32;', 'posicion' => ['x' => 100, 'y' => 520], 'zIndex' => 6],
            ['tipo' => 'texto', 'contenido' => 'Los bosques son fundamentales para la vida en nuestro planeta. Proporcionan oxígeno, regulan el clima, albergan biodiversidad y son fuente de recursos naturales. Sin embargo, la deforestación y el cambio climático amenazan estos ecosistemas vitales.', 'estilo' => 'font-size: 16px; color: #33691e; width: 600px; line-height: 1.5;', 'posicion' => ['x' => 100, 'y' => 570], 'zIndex' => 5],

            // Recuadro de estadísticas con imagen
            ['tipo' => 'forma', 'estilo' => 'width: 300px; height: 400px; background-color: rgba(76, 175, 80, 0.1); border: 2px solid #4caf50; border-radius: 8px;', 'posicion' => ['x' => 100, 'y' => 650], 'zIndex' => 4],
            ['tipo' => 'texto', 'contenido' => 'Datos Importantes', 'estilo' => 'font-size: 24px; font-weight: bold; color: #2e7d32; text-align: center; width: 300px;', 'posicion' => ['x' => 100, 'y' => 670], 'zIndex' => 15],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1542601906990-b4d3fb778b09?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=300&q=80', 'estilo' => 'width: 250px; height: 150px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 125, 'y' => 710], 'zIndex' => 16],
            ['tipo' => 'texto', 'contenido' => '• 80,000 hectáreas de bosque se pierden cada día\n• Los bosques albergan el 80% de la biodiversidad terrestre\n• 1.6 billones de personas dependen de los bosques para su sustento', 'estilo' => 'font-size: 16px; color: #33691e; white-space: pre-line; width: 250px;', 'posicion' => ['x' => 125, 'y' => 870], 'zIndex' => 14],

            // Recuadro de soluciones con imagen
            ['tipo' => 'forma', 'estilo' => 'width: 300px; height: 400px; background-color: rgba(139, 195, 74, 0.1); border: 2px solid #8bc34a; border-radius: 8px;', 'posicion' => ['x' => 450, 'y' => 650], 'zIndex' => 3],
            ['tipo' => 'texto', 'contenido' => 'Soluciones', 'estilo' => 'font-size: 24px; font-weight: bold; color: #558b2f; text-align: center; width: 300px;', 'posicion' => ['x' => 450, 'y' => 670], 'zIndex' => 13],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1513828583688-c52646db42da?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=300&q=80', 'estilo' => 'width: 250px; height: 150px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 475, 'y' => 710], 'zIndex' => 17],
            ['tipo' => 'texto', 'contenido' => '• Reforestación planificada\n• Consumo responsable\n• Políticas de protección\n• Educación ambiental\n• Apoyo a comunidades locales', 'estilo' => 'font-size: 16px; color: #33691e; white-space: pre-line; width: 250px;', 'posicion' => ['x' => 475, 'y' => 870], 'zIndex' => 12],

            // Sección de conclusión
            ['tipo' => 'texto', 'contenido' => 'Nuestro Compromiso', 'estilo' => 'font-size: 32px; font-weight: bold; color: #2e7d32;', 'posicion' => ['x' => 100, 'y' => 1100], 'zIndex' => 2],
            ['tipo' => 'texto', 'contenido' => 'Trabajamos para proteger los bosques mediante programas de conservación, educación y desarrollo sostenible. Únete a nuestra misión para preservar estos ecosistemas vitales para las generaciones futuras.', 'estilo' => 'font-size: 16px; color: #33691e; width: 800px; line-height: 1.5;', 'posicion' => ['x' => 100, 'y' => 1150], 'zIndex' => 1],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1448375240586-882707db888b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80', 'estilo' => 'width: 800px; height: 250px; object-fit: cover; border-radius: 8px;', 'posicion' => ['x' => 100, 'y' => 1200], 'zIndex' => 0],

            // Pie de página
            ['tipo' => 'forma', 'estilo' => 'width: 1000px; height: 80px; background-color: #2e7d32; border-radius: 5px 5px 0 0;', 'posicion' => ['x' => 112, 'y' => 1480], 'zIndex' => 18],
            ['tipo' => 'texto', 'contenido' => 'www.conservacionforestal.org | info@conservacionforestal.org | Tel: (123) 456-7890', 'estilo' => 'font-size: 16px; color: white; text-align: center; width: 1000px;', 'posicion' => ['x' => 112, 'y' => 1510], 'zIndex' => 19]
        ]
    ],
    [
        'nombre' => 'Energías Renovables',
        'imagen' => '',
        'color' => '#e3f2fd',
        'elementos' => [
            ['tipo' => 'texto', 'contenido' => 'ENERGÍAS RENOVABLES', 'estilo' => 'font-size: 48px; font-weight: bold; color: #1565c0; text-align: center; width: 800px;', 'posicion' => ['x' => 212, 'y' => 50], 'zIndex' => 10],
            ['tipo' => 'texto', 'contenido' => 'El futuro sostenible de la energía', 'estilo' => 'font-size: 22px; color: #0277bd; text-align: center; width: 600px;', 'posicion' => ['x' => 312, 'y' => 120], 'zIndex' => 9],
            ['tipo' => 'forma', 'estilo' => 'width: 800px; height: 5px; background-color: #1976d2; border-radius: 2px;', 'posicion' => ['x' => 212, 'y' => 160], 'zIndex' => 8],

            // Imagen principal
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1508514177221-188b1cf16e9d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80', 'estilo' => 'width: 800px; height: 300px; object-fit: cover; border-radius: 8px;', 'posicion' => ['x' => 212, 'y' => 180], 'zIndex' => 7],

            // Sección de introducción
            ['tipo' => 'texto', 'contenido' => '¿Qué son las energías renovables?', 'estilo' => 'font-size: 32px; font-weight: bold; color: #1565c0;', 'posicion' => ['x' => 100, 'y' => 520], 'zIndex' => 6],
            ['tipo' => 'texto', 'contenido' => 'Las energías renovables son fuentes de energía limpias, inagotables y crecientemente competitivas. Se diferencian de los combustibles fósiles principalmente en su diversidad, abundancia y potencial de aprovechamiento en cualquier parte del planeta.', 'estilo' => 'font-size: 16px; color: #0d47a1; width: 600px; line-height: 1.5;', 'posicion' => ['x' => 100, 'y' => 570], 'zIndex' => 5],

            // Tipos de energía renovable con imágenes
            ['tipo' => 'forma', 'estilo' => 'width: 220px; height: 300px; background-color: rgba(3, 169, 244, 0.1); border: 2px solid #03a9f4; border-radius: 8px;', 'posicion' => ['x' => 100, 'y' => 650], 'zIndex' => 4],
            ['tipo' => 'texto', 'contenido' => 'Solar', 'estilo' => 'font-size: 24px; font-weight: bold; color: #0288d1; text-align: center; width: 220px;', 'posicion' => ['x' => 100, 'y' => 670], 'zIndex' => 15],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1509391366360-2e959784a276?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=200&q=80', 'estilo' => 'width: 180px; height: 120px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 120, 'y' => 710], 'zIndex' => 16],
            ['tipo' => 'texto', 'contenido' => 'Aprovecha la radiación del sol para generar electricidad mediante paneles fotovoltaicos o calor con sistemas térmicos.', 'estilo' => 'font-size: 14px; color: #0d47a1; text-align: center; width: 180px;', 'posicion' => ['x' => 120, 'y' => 840], 'zIndex' => 14],

            ['tipo' => 'forma', 'estilo' => 'width: 220px; height: 300px; background-color: rgba(0, 150, 136, 0.1); border: 2px solid #009688; border-radius: 8px;', 'posicion' => ['x' => 350, 'y' => 650], 'zIndex' => 3],
            ['tipo' => 'texto', 'contenido' => 'Eólica', 'estilo' => 'font-size: 24px; font-weight: bold; color: #00796b; text-align: center; width: 220px;', 'posicion' => ['x' => 350, 'y' => 670], 'zIndex' => 13],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1548337138-e87d889cc369?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=200&q=80', 'estilo' => 'width: 180px; height: 120px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 370, 'y' => 710], 'zIndex' => 17],
            ['tipo' => 'texto', 'contenido' => 'Utiliza la fuerza del viento para generar electricidad mediante aerogeneradores o turbinas eólicas.', 'estilo' => 'font-size: 14px; color: #004d40; text-align: center; width: 180px;', 'posicion' => ['x' => 370, 'y' => 840], 'zIndex' => 12],

            ['tipo' => 'forma', 'estilo' => 'width: 220px; height: 300px; background-color: rgba(0, 188, 212, 0.1); border: 2px solid #00bcd4; border-radius: 8px;', 'posicion' => ['x' => 600, 'y' => 650], 'zIndex' => 2],
            ['tipo' => 'texto', 'contenido' => 'Hidráulica', 'estilo' => 'font-size: 24px; font-weight: bold; color: #0097a7; text-align: center; width: 220px;', 'posicion' => ['x' => 600, 'y' => 670], 'zIndex' => 11],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1473800447596-01729482b8eb?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=200&q=80', 'estilo' => 'width: 180px; height: 120px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 620, 'y' => 710], 'zIndex' => 18],
            ['tipo' => 'texto', 'contenido' => 'Aprovecha la energía del agua en movimiento para generar electricidad mediante turbinas hidráulicas.', 'estilo' => 'font-size: 14px; color: #006064; text-align: center; width: 180px;', 'posicion' => ['x' => 620, 'y' => 840], 'zIndex' => 10],

            // Beneficios con imagen
            ['tipo' => 'texto', 'contenido' => 'Beneficios', 'estilo' => 'font-size: 32px; font-weight: bold; color: #1565c0;', 'posicion' => ['x' => 100, 'y' => 1000], 'zIndex' => 1],
            ['tipo' => 'forma', 'estilo' => 'width: 800px; height: 350px; background-color: rgba(33, 150, 243, 0.1); border: 2px solid #2196f3; border-radius: 8px;', 'posicion' => ['x' => 100, 'y' => 1050], 'zIndex' => 0],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1453847668862-487637052f8a?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=400&q=80', 'estilo' => 'width: 300px; height: 200px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 550, 'y' => 1125], 'zIndex' => 19],
            ['tipo' => 'texto', 'contenido' => '• Reducción de emisiones de gases de efecto invernadero\n• Disminución de la dependencia energética externa\n• Generación de empleo y desarrollo económico local\n• Acceso a la energía en zonas remotas\n• Precios estables a largo plazo', 'estilo' => 'font-size: 16px; color: #0d47a1; white-space: pre-line; width: 400px;', 'posicion' => ['x' => 150, 'y' => 1100], 'zIndex' => 20],

            // Pie de página
            ['tipo' => 'forma', 'estilo' => 'width: 1000px; height: 80px; background-color: #1565c0; border-radius: 5px 5px 0 0;', 'posicion' => ['x' => 112, 'y' => 1480], 'zIndex' => 21],
            ['tipo' => 'texto', 'contenido' => 'www.energiasrenovables.org | contacto@energiasrenovables.org | Tel: (123) 456-7890', 'estilo' => 'font-size: 16px; color: white; text-align: center; width: 1000px;', 'posicion' => ['x' => 112, 'y' => 1510], 'zIndex' => 22]
        ]
    ],
    [
        'nombre' => 'Reciclaje y Economía Circular',
        'imagen' => '',
        'color' => '#f1f8e9',
        'elementos' => [
            ['tipo' => 'texto', 'contenido' => 'RECICLAJE Y ECONOMÍA CIRCULAR', 'estilo' => 'font-size: 42px; font-weight: bold; color: #689f38; text-align: center; width: 800px;', 'posicion' => ['x' => 212, 'y' => 50], 'zIndex' => 10],
            ['tipo' => 'texto', 'contenido' => 'Transformando residuos en recursos', 'estilo' => 'font-size: 22px; color: #558b2f; text-align: center; width: 600px;', 'posicion' => ['x' => 312, 'y' => 120], 'zIndex' => 9],
            ['tipo' => 'forma', 'estilo' => 'width: 800px; height: 5px; background-color: #7cb342; border-radius: 2px;', 'posicion' => ['x' => 212, 'y' => 160], 'zIndex' => 8],

            // Imagen principal
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1532996122724-e3c354a0b15b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80', 'estilo' => 'width: 800px; height: 300px; object-fit: cover; border-radius: 8px;', 'posicion' => ['x' => 212, 'y' => 180], 'zIndex' => 7],

            // Sección de introducción
            ['tipo' => 'texto', 'contenido' => 'La Economía Circular', 'estilo' => 'font-size: 32px; font-weight: bold; color: #689f38;', 'posicion' => ['x' => 100, 'y' => 520], 'zIndex' => 6],
            ['tipo' => 'texto', 'contenido' => 'La economía circular es un modelo de producción y consumo que implica compartir, alquilar, reutilizar, reparar, renovar y reciclar materiales y productos existentes todas las veces que sea posible para crear un valor añadido.', 'estilo' => 'font-size: 16px; color: #33691e; width: 600px; line-height: 1.5;', 'posicion' => ['x' => 100, 'y' => 570], 'zIndex' => 5],

            // Ciclo de reciclaje con imagen central
            ['tipo' => 'forma', 'estilo' => 'width: 400px; height: 400px; background-color: rgba(139, 195, 74, 0.1); border: 2px solid #8bc34a; border-radius: 50%;', 'posicion' => ['x' => 150, 'y' => 650], 'zIndex' => 4],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1611284446314-60a58ac0deb9?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=200&q=80', 'estilo' => 'width: 150px; height: 150px; object-fit: cover; border-radius: 50%;', 'posicion' => ['x' => 275, 'y' => 775], 'zIndex' => 15],

            // Elementos del ciclo
            ['tipo' => 'texto', 'contenido' => 'PRODUCCIÓN', 'estilo' => 'font-size: 18px; font-weight: bold; color: #689f38; text-align: center; width: 150px;', 'posicion' => ['x' => 275, 'y' => 670], 'zIndex' => 16],
            ['tipo' => 'texto', 'contenido' => 'DISTRIBUCIÓN', 'estilo' => 'font-size: 18px; font-weight: bold; color: #689f38; text-align: center; width: 150px;', 'posicion' => ['x' => 400, 'y' => 750], 'zIndex' => 17],
           ['tipo' => 'width: 150px;', 'posicion' => ['x' => 400, 'y' => 750], 'zIndex' => 17],
            ['tipo' => 'texto', 'contenido' => 'CONSUMO', 'estilo' => 'font-size: 18px; font-weight: bold; color: #689f38; text-align: center; width: 150px;', 'posicion' => ['x' => 350, 'y' => 850], 'zIndex' => 18],
            ['tipo' => 'texto', 'contenido' => 'RECICLAJE', 'estilo' => 'font-size: 18px; font-weight: bold; color: #689f38; text-align: center; width: 150px;', 'posicion' => ['x' => 200, 'y' => 850], 'zIndex' => 13],
            ['tipo' => 'texto', 'contenido' => 'MATERIAS PRIMAS', 'estilo' => 'font-size: 18px; font-weight: bold; color: #689f38; text-align: center; width: 150px;', 'posicion' => ['x' => 150, 'y' => 750], 'zIndex' => 12],

            // Beneficios del reciclaje con imagen
            ['tipo' => 'texto', 'contenido' => 'Beneficios del Reciclaje', 'estilo' => 'font-size: 28px; font-weight: bold; color: #689f38;', 'posicion' => ['x' => 600, 'y' => 650], 'zIndex' => 3],
            ['tipo' => 'forma', 'estilo' => 'width: 350px; height: 400px; background-color: rgba(156, 204, 101, 0.1); border: 2px solid #9ccc65; border-radius: 8px;', 'posicion' => ['x' => 600, 'y' => 700], 'zIndex' => 2],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1604187351574-c75ca79f5807?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=300&q=80', 'estilo' => 'width: 300px; height: 180px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 625, 'y' => 740], 'zIndex' => 14],
            ['tipo' => 'texto', 'contenido' => '• Ahorro de energía y recursos naturales\n• Reducción de la contaminación\n• Disminución de residuos en vertederos\n• Creación de empleos verdes\n• Conservación de ecosistemas\n• Mitigación del cambio climático', 'estilo' => 'font-size: 16px; color: #33691e; white-space: pre-line; width: 300px;', 'posicion' => ['x' => 625, 'y' => 940], 'zIndex' => 11],

            // Cómo reciclar con imágenes
            ['tipo' => 'texto', 'contenido' => 'Cómo Reciclar Correctamente', 'estilo' => 'font-size: 28px; font-weight: bold; color: #689f38;', 'posicion' => ['x' => 100, 'y' => 1100], 'zIndex' => 1],

            // Contenedores con imágenes
            ['tipo' => 'forma', 'estilo' => 'width: 150px; height: 200px; background-color: #2196f3; border-radius: 8px;', 'posicion' => ['x' => 100, 'y' => 1150], 'zIndex' => 0],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1605600659873-d808a13e4d2a?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=150&q=80', 'estilo' => 'width: 120px; height: 100px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 115, 'y' => 1170], 'zIndex' => 19],
            ['tipo' => 'texto', 'contenido' => 'PAPEL Y CARTÓN', 'estilo' => 'font-size: 16px; font-weight: bold; color: white; text-align: center; width: 150px;', 'posicion' => ['x' => 100, 'y' => 1280], 'zIndex' => 20],

            ['tipo' => 'forma', 'estilo' => 'width: 150px; height: 200px; background-color: #4caf50; border-radius: 8px;', 'posicion' => ['x' => 280, 'y' => 1150], 'zIndex' => 21],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1607344645866-009c320c5ab8?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=150&q=80', 'estilo' => 'width: 120px; height: 100px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 295, 'y' => 1170], 'zIndex' => 22],
            ['tipo' => 'texto', 'contenido' => 'VIDRIO', 'estilo' => 'font-size: 16px; font-weight: bold; color: white; text-align: center; width: 150px;', 'posicion' => ['x' => 280, 'y' => 1280], 'zIndex' => 23],

            ['tipo' => 'forma', 'estilo' => 'width: 150px; height: 200px; background-color: #ffeb3b; border-radius: 8px;', 'posicion' => ['x' => 460, 'y' => 1150], 'zIndex' => 24],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1605600659927-2ce9be3a9dc3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=150&q=80', 'estilo' => 'width: 120px; height: 100px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 475, 'y' => 1170], 'zIndex' => 25],
            ['tipo' => 'texto', 'contenido' => 'PLÁSTICO', 'estilo' => 'font-size: 16px; font-weight: bold; color: #333; text-align: center; width: 150px;', 'posicion' => ['x' => 460, 'y' => 1280], 'zIndex' => 26],

            ['tipo' => 'forma', 'estilo' => 'width: 150px; height: 200px; background-color: #f44336; border-radius: 8px;', 'posicion' => ['x' => 640, 'y' => 1150], 'zIndex' => 27],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1604187350574-c75ca79f5807?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=150&q=80', 'estilo' => 'width: 120px; height: 100px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 655, 'y' => 1170], 'zIndex' => 28],
            ['tipo' => 'texto', 'contenido' => 'ORGÁNICO', 'estilo' => 'font-size: 16px; font-weight: bold; color: white; text-align: center; width: 150px;', 'posicion' => ['x' => 640, 'y' => 1280], 'zIndex' => 29],

            // Pie de página
            ['tipo' => 'forma', 'estilo' => 'width: 1000px; height: 80px; background-color: #689f38; border-radius: 5px 5px 0 0;', 'posicion' => ['x' => 112, 'y' => 1480], 'zIndex' => 30],
            ['tipo' => 'texto', 'contenido' => 'www.reciclajeyeconomiacircular.org | info@reciclaje.org | Tel: (123) 456-7890', 'estilo' => 'font-size: 16px; color: white; text-align: center; width: 1000px;', 'posicion' => ['x' => 112, 'y' => 1510], 'zIndex' => 31]
        ]
    ],
    [
        'nombre' => 'Conservación del Agua',
        'imagen' => '',
        'color' => '#e1f5fe',
        'elementos' => [
            ['tipo' => 'texto', 'contenido' => 'CONSERVACIÓN DEL AGUA', 'estilo' => 'font-size: 48px; font-weight: bold; color: #0288d1; text-align: center; width: 800px;', 'posicion' => ['x' => 212, 'y' => 50], 'zIndex' => 10],
            ['tipo' => 'texto', 'contenido' => 'Cada gota cuenta', 'estilo' => 'font-size: 22px; color: #0277bd; text-align: center; width: 600px;', 'posicion' => ['x' => 312, 'y' => 120], 'zIndex' => 9],
            ['tipo' => 'forma', 'estilo' => 'width: 800px; height: 5px; background-color: #039be5; border-radius: 2px;', 'posicion' => ['x' => 212, 'y' => 160], 'zIndex' => 8],

            // Imagen principal
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1468421870903-4df1664ac249?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80', 'estilo' => 'width: 800px; height: 300px; object-fit: cover; border-radius: 8px;', 'posicion' => ['x' => 212, 'y' => 180], 'zIndex' => 7],

            // Sección de introducción
            ['tipo' => 'texto', 'contenido' => 'La Crisis del Agua', 'estilo' => 'font-size: 32px; font-weight: bold; color: #0288d1;', 'posicion' => ['x' => 100, 'y' => 520], 'zIndex' => 6],
            ['tipo' => 'texto', 'contenido' => 'El agua es un recurso vital pero limitado. A pesar de que el 71% de la superficie terrestre está cubierta por agua, solo el 2.5% es agua dulce, y de esta, solo el 0.3% es accesible para consumo humano. La escasez de agua afecta a más de 2.000 millones de personas en todo el mundo.', 'estilo' => 'font-size: 16px; color: #01579b; width: 600px; line-height: 1.5;', 'posicion' => ['x' => 100, 'y' => 570], 'zIndex' => 5],

            // Gráfico de distribución del agua con imagen
            ['tipo' => 'forma', 'estilo' => 'width: 300px; height: 300px; background-color: #03a9f4; border-radius: 50%;', 'posicion' => ['x' => 750, 'y' => 520], 'zIndex' => 4],
            ['tipo' => 'forma', 'estilo' => 'width: 75px; height: 75px; background-color: #0288d1; border-radius: 50%;', 'posicion' => ['x' => 862.5, 'y' => 632.5], 'zIndex' => 15],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1559825481-12a05cc00344?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=300&q=80', 'estilo' => 'width: 150px; height: 150px; object-fit: cover; border-radius: 50%; opacity: 0.7;', 'posicion' => ['x' => 825, 'y' => 595], 'zIndex' => 16],
            ['tipo' => 'texto', 'contenido' => 'Agua salada: 97.5%', 'estilo' => 'font-size: 16px; color: #01579b; text-align: right; width: 200px;', 'posicion' => ['x' => 520, 'y' => 620], 'zIndex' => 17],
            ['tipo' => 'texto', 'contenido' => 'Agua dulce: 2.5%', 'estilo' => 'font-size: 16px; color: #01579b; text-align: right; width: 200px;', 'posicion' => ['x' => 520, 'y' => 650], 'zIndex' => 14],

            // Causas de la escasez con imagen
            ['tipo' => 'texto', 'contenido' => 'Causas de la Escasez', 'estilo' => 'font-size: 28px; font-weight: bold; color: #0288d1;', 'posicion' => ['x' => 100, 'y' => 700], 'zIndex' => 3],
            ['tipo' => 'forma', 'estilo' => 'width: 350px; height: 350px; background-color: rgba(3, 169, 244, 0.1); border: 2px solid #03a9f4; border-radius: 8px;', 'posicion' => ['x' => 100, 'y' => 750], 'zIndex' => 2],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1536244636800-a3f74db0f3cf?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=300&q=80', 'estilo' => 'width: 300px; height: 180px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 125, 'y' => 780], 'zIndex' => 13],
            ['tipo' => 'texto', 'contenido' => '• Cambio climático\n• Contaminación de fuentes de agua\n• Sobreexplotación de acuíferos\n• Crecimiento poblacional\n• Agricultura intensiva\n• Gestión ineficiente', 'estilo' => 'font-size: 16px; color: #01579b; white-space: pre-line; width: 300px;', 'posicion' => ['x' => 125, 'y' => 970], 'zIndex' => 12],

            // Soluciones con imagen
            ['tipo' => 'texto', 'contenido' => 'Soluciones', 'estilo' => 'font-size: 28px; font-weight: bold; color: #0288d1;', 'posicion' => ['x' => 500, 'y' => 700], 'zIndex' => 1],
            ['tipo' => 'forma', 'estilo' => 'width: 350px; height: 350px; background-color: rgba(0, 188, 212, 0.1); border: 2px solid #00bcd4; border-radius: 8px;', 'posicion' => ['x' => 500, 'y' => 750], 'zIndex' => 0],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1600880292089-90a7e086ee0c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=300&q=80', 'estilo' => 'width: 300px; height: 180px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 525, 'y' => 780], 'zIndex' => 18],
            ['tipo' => 'texto', 'contenido' => '• Tecnologías de ahorro de agua\n• Reutilización y reciclaje\n• Captación de agua de lluvia\n• Restauración de ecosistemas\n• Educación y concienciación\n• Políticas de gestión sostenible', 'estilo' => 'font-size: 16px; color: #01579b; white-space: pre-line; width: 300px;', 'posicion' => ['x' => 525, 'y' => 970], 'zIndex' => 11],

            // Consejos para el hogar con imagen
            ['tipo' => 'texto', 'contenido' => 'Consejos para Ahorrar Agua en el Hogar', 'estilo' => 'font-size: 28px; font-weight: bold; color: #0288d1;', 'posicion' => ['x' => 100, 'y' => 1150], 'zIndex' => 19],
            ['tipo' => 'forma', 'estilo' => 'width: 800px; height: 250px; background-color: rgba(3, 169, 244, 0.1); border: 2px solid #03a9f4; border-radius: 8px;', 'posicion' => ['x' => 100, 'y' => 1200], 'zIndex' => 20],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1534009916851-7850ba974f91?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=300&q=80', 'estilo' => 'width: 250px; height: 180px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 600, 'y' => 1235], 'zIndex' => 21],
            ['tipo' => 'texto', 'contenido' => '1. Repara las fugas de grifos y tuberías\n2. Instala dispositivos de ahorro de agua\n3. Toma duchas más cortas\n4. Cierra el grifo mientras te cepillas los dientes\n5. Utiliza la lavadora y el lavavajillas a plena carga\n6. Recoge agua de lluvia para regar las plantas', 'estilo' => 'font-size: 16px; color: #01579b; white-space: pre-line; width: 450px;', 'posicion' => ['x' => 150, 'y' => 1230], 'zIndex' => 22],

            // Pie de página
            ['tipo' => 'forma', 'estilo' => 'width: 1000px; height: 80px; background-color: #0288d1; border-radius: 5px 5px 0 0;', 'posicion' => ['x' => 112, 'y' => 1480], 'zIndex' => 23],
            ['tipo' => 'texto', 'contenido' => 'www.conservaciondelagua.org | info@conservaciondelagua.org | Tel: (123) 456-7890', 'estilo' => 'font-size: 16px; color: white; text-align: center; width: 1000px;', 'posicion' => ['x' => 112, 'y' => 1510], 'zIndex' => 24]
        ]
    ],
    [
        'nombre' => 'Carrera Estudiantil por Etapas - Bilbao',
        'imagen' => '',
        'color' => '#fff8e1',
        'elementos' => [
            ['tipo' => 'texto', 'contenido' => 'CARRERA ESTUDIANTIL POR ETAPAS', 'estilo' => 'font-size: 48px; font-weight: bold; color: #e65100; text-align: center; width: 800px;', 'posicion' => ['x' => 212, 'y' => 50], 'zIndex' => 10],
            ['tipo' => 'texto', 'contenido' => 'BILBAO 2023', 'estilo' => 'font-size: 36px; font-weight: bold; color: #f57c00; text-align: center; width: 600px;', 'posicion' => ['x' => 312, 'y' => 110], 'zIndex' => 9],
            ['tipo' => 'forma', 'estilo' => 'width: 800px; height: 5px; background-color: #ff9800; border-radius: 2px;', 'posicion' => ['x' => 212, 'y' => 160], 'zIndex' => 8],

            // Imagen principal - Bilbao
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1590622783586-e5d3cc239f1d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80', 'estilo' => 'width: 800px; height: 300px; object-fit: cover; border-radius: 8px;', 'posicion' => ['x' => 212, 'y' => 180], 'zIndex' => 7],

            // Sección de introducción
            ['tipo' => 'texto', 'contenido' => 'Sobre la Carrera', 'estilo' => 'font-size: 32px; font-weight: bold; color: #e65100;', 'posicion' => ['x' => 100, 'y' => 520], 'zIndex' => 6],
            ['tipo' => 'texto', 'contenido' => 'La Carrera Estudiantil por Etapas de Bilbao es un evento deportivo y cultural que recorre los lugares más emblemáticos de la ciudad. Diseñada para estudiantes universitarios, combina deporte, cultura y trabajo en equipo a lo largo de 5 etapas distribuidas por toda la ciudad.', 'estilo' => 'font-size: 16px; color: #bf360c; width: 800px; line-height: 1.5;', 'posicion' => ['x' => 100, 'y' => 570], 'zIndex' => 5],

            // Etapa 1 - Casco Viejo
            ['tipo' => 'forma', 'estilo' => 'width: 800px; height: 180px; background-color: rgba(255, 152, 0, 0.1); border: 2px solid #ff9800; border-radius: 8px;', 'posicion' => ['x' => 100, 'y' => 650], 'zIndex' => 4],
            ['tipo' => 'texto', 'contenido' => 'ETAPA 1: CASCO VIEJO', 'estilo' => 'font-size: 24px; font-weight: bold; color: #e65100; width: 300px;', 'posicion' => ['x' => 120, 'y' => 670], 'zIndex' => 15],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1559293831-8a81f8d7febb?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=200&q=80', 'estilo' => 'width: 150px; height: 150px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 730, 'y' => 665], 'zIndex' => 16],
            ['tipo' => 'texto', 'contenido' => 'Recorrido por las Siete Calles, con pruebas culturales sobre la historia de Bilbao. Los participantes deberán resolver acertijos relacionados con monumentos históricos.', 'estilo' => 'font-size: 16px; color: #bf360c; width: 550px; line-height: 1.5;', 'posicion' => ['x' => 120, 'y' => 710], 'zIndex' => 14],

            // Etapa 2 - Guggenheim
            ['tipo' => 'forma', 'estilo' => 'width: 800px; height: 180px; background-color: rgba(255, 193, 7, 0.1); border: 2px solid #ffc107; border-radius: 8px;', 'posicion' => ['x' => 100, 'y' => 850], 'zIndex' => 3],
            ['tipo' => 'texto', 'contenido' => 'ETAPA 2: MUSEO GUGGENHEIM', 'estilo' => 'font-size: 24px; font-weight: bold; color: #e65100; width: 400px;', 'posicion' => ['x' => 120, 'y' => 870], 'zIndex' => 13],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1551801841-ecad875a5142?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=200&q=80', 'estilo' => 'width: 150px; height: 150px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 730, 'y' => 865], 'zIndex' => 17],
            ['tipo' => 'texto', 'contenido' => 'Carrera de orientación alrededor del museo y la ría. Los equipos deberán encontrar puntos de control y responder preguntas sobre arte contemporáneo.', 'estilo' => 'font-size: 16px; color: #bf360c; width: 550px; line-height: 1.5;', 'posicion' => ['x' => 120, 'y' => 910], 'zIndex' => 12],

            // Etapa 3 - Universidad de Deusto
            ['tipo' => 'forma', 'estilo' => 'width: 800px; height: 180px; background-color: rgba(255, 152, 0, 0.1); border: 2px solid #ff9800; border-radius: 8px;', 'posicion' => ['x' => 100, 'y' => 1050], 'zIndex' => 2],
            ['tipo' => 'texto', 'contenido' => 'ETAPA 3: UNIVERSIDAD DE DEUSTO', 'estilo' => 'font-size: 24px; font-weight: bold; color: #e65100; width: 400px;', 'posicion' => ['x' => 120, 'y' => 1070], 'zIndex' => 11],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1541339907198-e08756dedf3f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=200&q=80', 'estilo' => 'width: 150px; height: 150px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 730, 'y' => 1065], 'zIndex' => 18],
            ['tipo' => 'texto', 'contenido' => 'Pruebas de conocimiento y habilidad en el campus universitario. Los participantes competirán en desafíos académicos y deportivos.', 'estilo' => 'font-size: 16px; color: #bf360c; width: 550px; line-height: 1.5;', 'posicion' => ['x' => 120, 'y' => 1110], 'zIndex' => 10],

            // Etapa 4 - Parque de Doña Casilda
            ['tipo' => 'forma', 'estilo' => 'width: 800px; height: 180px; background-color: rgba(255, 193, 7, 0.1); border: 2px solid #ffc107; border-radius: 8px;', 'posicion' => ['x' => 100, 'y' => 1250], 'zIndex' => 1],
            ['tipo' => 'texto', 'contenido' => 'ETAPA 4: PARQUE DE DOÑA CASILDA', 'estilo' => 'font-size: 24px; font-weight: bold; color: #e65100; width: 400px;', 'posicion' => ['x' => 120, 'y' => 1270], 'zIndex' => 9],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1519331379826-f10be5486c6f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=200&q=80', 'estilo' => 'width: 150px; height: 150px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 730, 'y' => 1265], 'zIndex' => 19],
            ['tipo' => 'texto', 'contenido' => 'Pruebas de resistencia y trabajo en equipo en el parque. Incluye carreras de relevos, juegos de equilibrio y actividades de coordinación grupal.', 'estilo' => 'font-size: 16px; color: #bf360c; width: 550px; line-height: 1.5;', 'posicion' => ['x' => 120, 'y' => 1310], 'zIndex' => 8],

            // Etapa 5 - Meta en San Mamés
            ['tipo' => 'forma', 'estilo' => 'width: 800px; height: 180px; background-color: rgba(255, 152, 0, 0.1); border: 2px solid #ff9800; border-radius: 8px;', 'posicion' => ['x' => 100, 'y' => 1450], 'zIndex' => 0],
            ['tipo' => 'texto', 'contenido' => 'ETAPA 5: META EN SAN MAMÉS', 'estilo' => 'font-size: 24px; font-weight: bold; color: #e65100; width: 400px;', 'posicion' => ['x' => 120, 'y' => 1470], 'zIndex' => 7],
            ['tipo' => 'imagen', 'contenido' => 'https://images.unsplash.com/photo-1577223625816-7546f13df25d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=200&q=80', 'estilo' => 'width: 150px; height: 150px; object-fit: cover; border-radius: 4px;', 'posicion' => ['x' => 730, 'y' => 1465], 'zIndex' => 20],
            ['tipo' => 'texto', 'contenido' => 'Final de la carrera en el estadio de San Mamés. Ceremonia de entrega de premios y celebración con todos los participantes.', 'estilo' => 'font-size: 16px; color: #bf360c; width: 550px; line-height: 1.5;', 'posicion' => ['x' => 120, 'y' => 1510], 'zIndex' => 6],

            // Información de inscripción
            ['tipo' => 'forma', 'estilo' => 'width: 1000px; height: 80px; background-color: #e65100; border-radius: 5px 5px 0 0;', 'posicion' => ['x' => 112, 'y' => 1650], 'zIndex' => 21],
            ['tipo' => 'texto', 'contenido' => 'INSCRIPCIONES: www.carreraestudiantilbilbao.es | info@carreraestudiantil.org | Tel: (123) 456-7890', 'estilo' => 'font-size: 16px; color: white; text-align: center; width: 1000px;', 'posicion' => ['x' => 112, 'y' => 1680], 'zIndex' => 22]
        ]
    ],
    [
        'nombre' => 'Proyecto de Demostración',
        'imagen' => '',
        'color' => '#f8f9fa',
        'elementos' => $proyecto_demo['elementos']
    ]
];
?>
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Creador de Proyectos</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/interactjs/dist/interact.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #4361ee;
            --primary-hover: #3a56d4;
            --secondary: #2ec4b6;
            --dark: #1e293b;
            --darker: #0f172a;
            --light: #f8fafc;
            --gray: #64748b;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--darker);
            color: var(--light);
            overflow: hidden;
        }

        .btn {
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
            font-weight: 500;
            transition: all 0.2s;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .btn-primary {
            background-color: var(--primary);
            color: white;
        }

        .btn-primary:hover {
            background-color: var(--primary-hover);
        }

        .btn-secondary {
            background-color: var(--secondary);
            color: white;
        }

        .btn-secondary:hover {
            background-color: #25a99d;
        }

        .sidebar {
            background-color: var(--dark);
            border-right: 1px solid rgba(255, 255, 255, 0.1);
        }

        .canvas-element {
            position: absolute;
            user-select: none;
            cursor: move;
            padding: 8px;
            min-width: 40px;
            min-height: 30px;
            border-radius: 4px;
            transition: box-shadow 0.2s ease;
        }

        .canvas-element:hover {
            box-shadow: 0 0 0 1px rgba(67, 97, 238, 0.3);
        }

        .canvas-element p {
            cursor: text;
            outline: none;
        }

        .canvas-element.active {
            box-shadow: 0 0 0 2px var(--primary);
        }

        #canvas-container {
            overflow: auto;
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: var(--darker);
        }

        #canvas {
            transition: transform 0.3s ease;
            background-color: white;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
            transform-origin: center;
            margin: auto;
        }

        .template-option {
            transition: all 0.3s ease;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .template-option:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.2);
        }

        .template-preview {
            height: 200px;
            background-color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            position: relative;
        }

        .template-preview-content {
            transform: scale(0.25);
            transform-origin: center;
            width: 1224px;
            height: 1584px;
            position: absolute;
        }

        /* Estilos para el modal */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        .modal-content {
            background-color: var(--dark);
            border-radius: 8px;
            max-width: 90%;
            max-height: 90%;
            overflow: auto;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
        }

        .modal-header {
            padding: 16px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-body {
            padding: 16px;
        }

        /* Animaciones */
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .fade-in {
            animation: fadeIn 0.3s ease-in-out;
        }

        /* Estilos para el proyecto de demostración */
        .demo-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: var(--primary);
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 600;
            z-index: 1000;
        }

        /* Estilos para el panel de propiedades */
        .properties-panel {
            background-color: var(--dark);
            border-radius: 8px;
            padding: 16px;
            margin-top: 16px;
        }

        .properties-panel h3 {
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 12px;
            color: var(--light);
        }

        .property-group {
            margin-bottom: 16px;
        }

        .property-label {
            font-size: 12px;
            color: var(--gray);
            margin-bottom: 4px;
        }

        .property-input {
            width: 100%;
            padding: 8px;
            border-radius: 4px;
            background-color: var(--darker);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: var(--light);
            font-size: 14px;
        }

        .property-input:focus {
            outline: none;
            border-color: var(--primary);
        }

        .color-picker {
            width: 100%;
            height: 32px;
            padding: 0;
            border: none;
            background: none;
        }

        /* Estilos para el menú de capas */
        .layers-panel {
            background-color: var(--dark);
            border-radius: 8px;
            padding: 16px;
            margin-top: 16px;
            max-height: 300px;
            overflow-y: auto;
        }

        .layer-item {
            display: flex;
            align-items: center;
            padding: 8px;
            border-radius: 4px;
            margin-bottom: 4px;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .layer-item:hover {
            background-color: rgba(255, 255, 255, 0.05);
        }

        .layer-item.active {
            background-color: rgba(67, 97, 238, 0.2);
        }

        .layer-icon {
            margin-right: 8px;
            font-size: 14px;
            color: var(--gray);
        }

        .layer-name {
            flex: 1;
            font-size: 14px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .layer-actions {
            display: flex;
            gap: 4px;
        }

        .layer-action {
            padding: 4px;
            border-radius: 4px;
            background-color: transparent;
            color: var(--gray);
            transition: all 0.2s;
        }

        .layer-action:hover {
            background-color: rgba(255, 255, 255, 0.1);
            color: var(--light);
        }

        /* Estilos para el menú de elementos */
        .elements-menu {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 8px;
            margin-bottom: 16px;
        }

        .element-button {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 12px;
            border-radius: 8px;
            background-color: var(--darker);
            border: 1px solid rgba(255, 255, 255, 0.1);
            cursor: pointer;
            transition: all 0.2s;
        }

        .element-button:hover {
            background-color: rgba(67, 97, 238, 0.1);
            border-color: var(--primary);
        }

        .element-icon {
            font-size: 24px;
            margin-bottom: 8px;
            color: var(--primary);
        }

        .element-label {
            font-size: 12px;
            color: var(--light);
        }
    </style>
</head>
<body>
    <?php if(isset($_SESSION['error']) || isset($_SESSION['success'])): ?>
        <script>
            Swal.fire({
                icon: '<?php echo isset($_SESSION['error']) ? 'error' : 'success'; ?>',
                title: '<?php echo isset($_SESSION['error']) ? '¡Oops!' : '¡Éxito!'; ?>',
                text: '<?php echo isset($_SESSION['error']) ? $_SESSION['error'] : $_SESSION['success']; ?>',
                confirmButtonText: 'Aceptar',
                confirmButtonColor: '#4361ee'
            });
        </script>
        <?php unset($_SESSION['error']); unset($_SESSION['success']); ?>
    <?php endif; ?>

    <div class="flex h-screen">
        <!-- Barra lateral izquierda -->
        <div class="sidebar w-80 flex flex-col">
            <div class="p-4 border-b border-gray-800">
                <h1 class="text-xl font-bold text-white mb-1">Creador de Proyectos</h1>
                <p class="text-xs text-gray-400">Diseña y crea proyectos profesionales</p>
            </div>

            <div class="flex-1 overflow-y-auto p-4">
                <div class="bg-gray-800 rounded-lg p-4 mb-4">
                    <h2 class="text-lg font-semibold mb-3">Plantillas</h2>
                    <button id="show-templates" class="btn btn-primary w-full mb-4">
                        <i class="fas fa-th-large"></i>
                        Ver todas las plantillas
                    </button>

                    <div class="bg-opacity-10 bg-white p-3 rounded-lg mb-4">
                        <h3 class="text-sm font-semibold mb-2 text-gray-300">Plantilla actual:</h3>
                        <p id="current-template-name" class="text-blue-400 font-medium">Ninguna seleccionada</p>
                    </div>

                    <div class="mt-4">
                        <button id="view-demo-project" class="btn btn-secondary w-full">
                            <i class="fas fa-play-circle"></i>
                            Ver proyecto de demostración
                        </button>
                    </div>
                </div>

                <!-- Menú de elementos -->
                <div class="bg-gray-800 rounded-lg p-4 mb-4">
                    <h2 class="text-lg font-semibold mb-3">Añadir elementos</h2>
                    <div class="elements-menu">
                        <div class="element-button" id="add-text">
                            <i class="fas fa-font element-icon"></i>
                            <span class="element-label">Texto</span>
                        </div>
                        <div class="element-button" id="add-image">
                            <i class="fas fa-image element-icon"></i>
                            <span class="element-label">Imagen</span>
                        </div>
                        <div class="element-button" id="add-shape">
                            <i class="fas fa-shapes element-icon"></i>
                            <span class="element-label">Forma</span>
                        </div>
                        <div class="element-button" id="add-line">
                            <i class="fas fa-minus element-icon"></i>
                            <span class="element-label">Línea</span>
                        </div>
                    </div>
                </div>

                <!-- Panel de propiedades -->
                <div id="properties-panel" class="properties-panel hidden">
                    <h3>Propiedades</h3>
                    <div id="text-properties" class="hidden">
                        <div class="property-group">
                            <div class="property-label">Texto</div>
                            <textarea id="text-content" class="property-input" rows="3"></textarea>
                        </div>
                        <div class="property-group">
                            <div class="property-label">Color de texto</div>
                            <input type="color" id="text-color" class="color-picker">
                        </div>
                        <div class="property-group">
                            <div class="property-label">Tamaño de fuente (px)</div>
                            <input type="number" id="font-size" class="property-input" min="8" max="72">
                        </div>
                        <div class="property-group">
                            <div class="property-label">Alineación</div>
                            <div class="flex space-x-2">
                                <button id="align-left" class="btn btn-primary flex-1 py-1"><i class="fas fa-align-left"></i></button>
                                <button id="align-center" class="btn btn-primary flex-1 py-1"><i class="fas fa-align-center"></i></button>
                                <button id="align-right" class="btn btn-primary flex-1 py-1"><i class="fas fa-align-right"></i></button>
                            </div>
                        </div>
                    </div>

                    <div id="shape-properties" class="hidden">
                        <div class="property-group">
                            <div class="property-label">Color de fondo</div>
                            <input type="color" id="shape-bg-color" class="color-picker">
                        </div>
                        <div class="property-group">
                            <div class="property-label">Color de borde</div>
                            <input type="color" id="shape-border-color" class="color-picker">
                        </div>
                        <div class="property-group">
                            <div class="property-label">Ancho (px)</div>
                            <input type="number" id="shape-width" class="property-input" min="10" max="1000">
                        </div>
                        <div class="property-group">
                            <div class="property-label">Alto (px)</div>
                            <input type="number" id="shape-height" class="property-input" min="10" max="1000">
                        </div>
                        <div class="property-group">
                            <div class="property-label">Radio de borde (px)</div>
                            <input type="number" id="shape-radius" class="property-input" min="0" max="500">
                        </div>
                    </div>

                    <div id="image-properties" class="hidden">
                        <div class="property-group">
                            <div class="property-label">URL de la imagen</div>
                            <input type="text" id="image-url" class="property-input">
                        </div>
                        <div class="property-group">
                            <div class="property-label">Ancho (px)</div>
                            <input type="number" id="image-width" class="property-input" min="10" max="1000">
                        </div>
                        <div class="property-group">
                            <div class="property-label">Alto (px)</div>
                            <input type="number" id="image-height" class="property-input" min="10" max="1000">
                        </div>
                        <div class="property-group">
                            <div class="property-label">Radio de borde (px)</div>
                            <input type="number" id="image-radius" class="property-input" min="0" max="500">
                        </div>
                    </div>

                    <div class="property-group">
                        <div class="property-label">Posición Z (capa)</div>
                        <div class="flex space-x-2">
                            <button id="bring-forward" class="btn btn-primary flex-1 py-1"><i class="fas fa-arrow-up"></i></button>
                            <button id="send-backward" class="btn btn-primary flex-1 py-1"><i class="fas fa-arrow-down"></i></button>
                            <button id="bring-to-front" class="btn btn-primary flex-1 py-1"><i class="fas fa-level-up-alt"></i></button>
                            <button id="send-to-back" class="btn btn-primary flex-1 py-1"><i class="fas fa-level-down-alt"></i></button>
                        </div>
                    </div>

                    <div class="mt-4">
                        <button id="delete-element" class="btn btn-primary w-full bg-red-600 hover:bg-red-700">
                            <i class="fas fa-trash"></i>
                            Eliminar elemento
                        </button>
                    </div>
                </div>

                <!-- Panel de capas -->
                <div id="layers-panel" class="layers-panel">
                    <h3 class="mb-3 flex justify-between items-center">
                        <span>Capas</span>
                        <button id="refresh-layers" class="text-gray-400 hover:text-white">
                            <i class="fas fa-sync-alt"></i>
                        </button>
                    </h3>
                    <div id="layers-list">
                        <!-- Las capas se añadirán aquí dinámicamente -->
                    </div>
                </div>

                <div class="mt-4">
                    <button id="save-project" class="btn btn-primary w-full">
                        <i class="fas fa-save"></i>
                        Guardar proyecto
                    </button>
                </div>
            </div>
        </div>

        <!-- Área principal -->
        <div class="flex-1 flex flex-col">
            <!-- Barra de herramientas superior -->
            <div class="bg-dark p-3 shadow-md flex justify-between items-center border-b border-gray-800">
                <div class="flex space-x-1">
                    <button id="zoom-in" class="p-2 rounded-md bg-gray-700 text-white">
                        <i class="fas fa-search-plus"></i>
                    </button>
                    <button id="zoom-out" class="p-2 rounded-md bg-gray-700 text-white">
                        <i class="fas fa-search-minus"></i>
                    </button>
                    <button id="zoom-reset" class="p-2 rounded-md bg-gray-700 text-white">
                        <i class="fas fa-expand"></i>
                    </button>
                </div>
                <div>
                    <span id="current-step-label" class="text-sm font-medium text-gray-300">Editor de Proyectos</span>
                </div>
                <div>
                    <button id="preview-project" class="btn btn-primary">
                        <i class="fas fa-eye"></i>
                        Vista previa
                    </button>
                </div>
            </div>

            <!-- Lienzo de edición -->
            <div id="canvas-container" class="flex-1 overflow-auto p-4">
                <div id="canvas" class="bg-white w-[1224px] h-[1584px] shadow-lg relative">
                    <!-- Los elementos se añadirán aquí dinámicamente -->
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de plantillas -->
    <div id="templates-modal" class="modal hidden">
        <div class="modal-content w-4/5 max-h-[80vh]">
            <div class="modal-header">
                <h2 class="text-xl font-bold">Selecciona una plantilla</h2>
                <button id="close-templates-modal" class="text-gray-400 hover:text-white">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <div class="grid grid-cols-2 gap-6">
                    <?php foreach ($plantillas as $index => $plantilla): ?>
                        <div class="template-option cursor-pointer" data-index="<?php echo $index; ?>">
                            <div class="template-preview">
                                <div class="template-preview-content" style="<?php echo $plantilla['color'] ? 'background-color: '.$plantilla['color'].';' : ''; ?> <?php echo $plantilla['imagen'] ? 'background-image: url('.$plantilla['imagen'].'); background-size: cover; background-position: center;' : ''; ?>">
                                    <?php foreach ($plantilla['elementos'] as $elemento): ?>
                                        <div style="position: absolute; <?php echo !empty($elemento['estilo']) ? $elemento['estilo'] : ''; ?> transform: translate(<?php echo $elemento['posicion']['x']; ?>px, <?php echo $elemento['posicion']['y']; ?>px); z-index: <?php echo $elemento['zIndex']; ?>;">


                                            <?php if ($elemento['tipo'] === 'texto'): ?>
                                                <p><?php echo $elemento['contenido']; ?></p>
                                            <?php elseif ($elemento['tipo'] === 'imagen'): ?>
                                                <img src="<?php echo $elemento['contenido']; ?>" alt="Imagen" style="width: 100%; height: 100%; object-fit: cover;">
                                            <?php endif; ?>
                                        </div>
                                    <?php endforeach; ?>
                                </div>
                            </div>
                            <div class="p-3 bg-dark">
                                <p class="font-medium text-center"><?php echo $plantilla['nombre']; ?></p>
                            </div>
                        </div>
                    <?php endforeach; ?>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de vista previa -->
    <div id="preview-modal" class="modal hidden">
        <div class="modal-content w-4/5 max-h-[90vh]">
            <div class="modal-header">
                <h2 class="text-xl font-bold">Vista previa del proyecto</h2>
                <button id="close-preview-modal" class="text-gray-400 hover:text-white">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body bg-white overflow-auto">
                <div id="preview-container" class="w-full" style="height: 70vh;">
                    <!-- Aquí se mostrará la vista previa -->
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de demostración -->
    <div id="demo-modal" class="modal hidden">
        <div class="modal-content w-4/5 max-h-[90vh]">
            <div class="modal-header">
                <h2 class="text-xl font-bold">Proyecto de Demostración</h2>
                <button id="close-demo-modal" class="text-gray-400 hover:text-white">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <p class="mb-4 text-gray-300">Este es un proyecto de demostración que muestra las capacidades del editor. Puedes cargarlo como plantilla o explorar sus características.</p>
                <div class="flex space-x-4">
                    <button id="load-demo-project" class="btn btn-primary">
                        <i class="fas fa-download"></i>
                        Cargar como plantilla
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para añadir imagen -->
    <div id="image-modal" class="modal hidden">
        <div class="modal-content w-1/2">
            <div class="modal-header">
                <h2 class="text-xl font-bold">Añadir imagen</h2>
                <button id="close-image-modal" class="text-gray-400 hover:text-white">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-300 mb-2">URL de la imagen</label>
                    <input type="text" id="new-image-url" class="w-full p-2 border rounded bg-gray-800 text-white border-gray-700" placeholder="https://ejemplo.com/imagen.jpg">
                </div>
                <div class="flex justify-end">
                    <button id="insert-image" class="btn btn-primary">
                        <i class="fas fa-plus"></i>
                        Insertar imagen
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Elementos principales
        const canvas = document.getElementById('canvas');
        const canvasContainer = document.getElementById('canvas-container');
        const addTextBtn = document.getElementById('add-text');
        const addImageBtn = document.getElementById('add-image');
        const addShapeBtn = document.getElementById('add-shape');
        const addLineBtn = document.getElementById('add-line');
        const saveProjectBtn = document.getElementById('save-project');
        const deleteElementBtn = document.getElementById('delete-element');
        const templatesModal = document.getElementById('templates-modal');
        const showTemplatesBtn = document.getElementById('show-templates');
        const closeTemplatesModalBtn = document.getElementById('close-templates-modal');
        const previewProjectBtn = document.getElementById('preview-project');
        const previewModal = document.getElementById('preview-modal');
        const closePreviewModalBtn = document.getElementById('close-preview-modal');
        const demoModal = document.getElementById('demo-modal');
        const viewDemoProjectBtn = document.getElementById('view-demo-project');
        const closeDemoModalBtn = document.getElementById('close-demo-modal');
        const loadDemoProjectBtn = document.getElementById('load-demo-project');
        const currentTemplateName = document.getElementById('current-template-name');
        const propertiesPanel = document.getElementById('properties-panel');
        const textProperties = document.getElementById('text-properties');
        const shapeProperties = document.getElementById('shape-properties');
        const imageProperties = document.getElementById('image-properties');
        const layersList = document.getElementById('layers-list');
        const refreshLayersBtn = document.getElementById('refresh-layers');
        const imageModal = document.getElementById('image-modal');
        const closeImageModalBtn = document.getElementById('close-image-modal');
        const insertImageBtn = document.getElementById('insert-image');
        const newImageUrlInput = document.getElementById('new-image-url');

        // Variables de estado
        let activeElement = null;
        let zIndex = 100; // Empezamos con un zIndex alto para nuevos elementos
        let scale = 0.6; // Zoom inicial reducido
        let currentTemplateIndex = null;
        let isDragging = false;

        // Aplicar zoom inicial
        canvas.style.transform = `scale(${scale})`;

        // Gestión de modales
        function showModal(modal) {
            modal.classList.remove('hidden');
            modal.classList.add('fade-in');
        }

        function hideModal(modal) {
            modal.classList.add('hidden');
            modal.classList.remove('fade-in');
        }

        // Mostrar modal de plantillas
        showTemplatesBtn.addEventListener('click', function() {
            showModal(templatesModal);
        });

        closeTemplatesModalBtn.addEventListener('click', function() {
            hideModal(templatesModal);
        });

        // Mostrar modal de vista previa
        previewProjectBtn.addEventListener('click', function() {
            const previewContainer = document.getElementById('preview-container');
            const canvasClone = canvas.cloneNode(true);

            // Eliminar la clase active de todos los elementos
            canvasClone.querySelectorAll('.canvas-element').forEach(element => {
                element.classList.remove('active');
            });

            // Ajustar el tamaño para que quepa en el modal
            canvasClone.style.transform = 'scale(0.5)';
            canvasClone.style.transformOrigin = 'top left';
            canvasClone.style.margin = '0 auto';

            // Limpiar y añadir el clon
            previewContainer.innerHTML = '';
            previewContainer.appendChild(canvasClone);

            showModal(previewModal);
        });

        closePreviewModalBtn.addEventListener('click', function() {
            hideModal(previewModal);
        });

        // Mostrar modal de demostración
        viewDemoProjectBtn.addEventListener('click', function() {
            showModal(demoModal);
        });

        closeDemoModalBtn.addEventListener('click', function() {
            hideModal(demoModal);
        });

        // Modal de imagen
        addImageBtn.addEventListener('click', function() {
            showModal(imageModal);
        });

        closeImageModalBtn.addEventListener('click', function() {
            hideModal(imageModal);
        });

        insertImageBtn.addEventListener('click', function() {
            const imageUrl = newImageUrlInput.value.trim();
            if (imageUrl) {
                addElement('image', imageUrl);
                hideModal(imageModal);
                newImageUrlInput.value = '';
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'URL vacía',
                    text: 'Por favor, introduce una URL de imagen válida',
                    confirmButtonText: 'Aceptar',
                    confirmButtonColor: '#4361ee'
                });
            }
        });

        // Cargar proyecto de demostración
        loadDemoProjectBtn.addEventListener('click', function() {
            hideModal(demoModal);

            // Cargar la plantilla de demostración
            currentTemplateIndex = 6; // Índice del proyecto de demostración
            loadTemplate(plantillas[currentTemplateIndex]);
            currentTemplateName.textContent = plantillas[currentTemplateIndex].nombre;

            // Mostrar mensaje
            Swal.fire({
                icon: 'success',
                title: '¡Proyecto de demostración cargado!',
                text: 'Ahora puedes editar el proyecto de demostración',
                confirmButtonText: 'Entendido',
                confirmButtonColor: '#4361ee'
            });
        });

        // Cargar plantilla
        const plantillas = <?php echo json_encode($plantillas); ?>;
        document.querySelectorAll('.template-option').forEach(option => {
            option.addEventListener('click', function() {
                const index = parseInt(this.getAttribute('data-index'));
                currentTemplateIndex = index;
                loadTemplate(plantillas[index]);
                hideModal(templatesModal);
                currentTemplateName.textContent = plantillas[index].nombre;

                // Mostrar mensaje de éxito
                Swal.fire({
                    icon: 'success',
                    title: '¡Plantilla seleccionada!',
                    text: `Has seleccionado la plantilla "${plantillas[index].nombre}"`,
                    confirmButtonText: 'Entendido',
                    confirmButtonColor: '#4361ee'
                });

                // Actualizar la lista de capas
                updateLayersList();
            });
        });

        function loadTemplate(plantilla) {
            // Limpiar el canvas
            canvas.innerHTML = '';

            // Establecer el fondo
            if (plantilla.imagen) {
                canvas.style.backgroundImage = `url(${plantilla.imagen})`;
                canvas.style.backgroundSize = 'cover';
                canvas.style.backgroundPosition = 'center';
            } else if (plantilla.color) {
                canvas.style.backgroundColor = plantilla.color;
                canvas.style.backgroundImage = 'none';
            } else {
                canvas.style.backgroundImage = 'none';
                canvas.style.backgroundColor = 'white';
            }

            // Encontrar el zIndex más alto
            zIndex = 0;
            plantilla.elementos.forEach(elemento => {
                if (elemento.zIndex > zIndex) {
                    zIndex = elemento.zIndex;
                }
            });
            zIndex += 10; // Añadir margen para nuevos elementos

            // Añadir elementos de la plantilla
            plantilla.elementos.forEach(elemento => {
                const el = document.createElement('div');
                el.className = 'canvas-element';
                el.style.cssText = elemento.estilo;
                el.style.transform = `translate(${elemento.posicion.x}px, ${elemento.posicion.y}px)`;
                el.style.zIndex = elemento.zIndex;
                el.setAttribute('data-x', elemento.posicion.x);
                el.setAttribute('data-y', elemento.posicion.y);
                el.setAttribute('data-tipo', elemento.tipo);

                if (elemento.tipo === 'texto') {
                    el.innerHTML = `<p contenteditable="true">${elemento.contenido}</p>`;
                } else if (elemento.tipo === 'imagen') {
                    el.innerHTML = `<img src="${elemento.contenido}" alt="Imagen" style="width: 100%; height: 100%; object-fit: cover;">`;
                    el.setAttribute('data-src', elemento.contenido);
                } else if (elemento.tipo === 'forma') {
                    // No necesitamos hacer nada especial aquí, ya que el estilo de la forma está en elemento.estilo
                }

                canvas.appendChild(el);
                makeElementInteractive(el);
            });

            // Actualizar la lista de capas
            updateLayersList();
        }

        function makeElementInteractive(element) {
            interact(element)
                .draggable({
                    inertia: true,
                    modifiers: [
                        interact.modifiers.restrictRect({
                            restriction: 'parent',
                            endOnly: true
                        })
                    ],
                    listeners: {
                        start() {
                            setActiveElement(element);
                            isDragging = true;
                        },
                        move(event) {
                            const target = event.target;
                            const x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx;
                            const y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;

                            target.style.transform = `translate(${x}px, ${y}px)`;
                            target.setAttribute('data-x', x);
                            target.setAttribute('data-y', y);
                        },
                        end() {
                            isDragging = false;
                        }
                    }
                })
                .resizable({
                    edges: { left: true, right: true, bottom: true, top: true },
                    listeners: {
                        start() {
                            setActiveElement(element);
                        },
                        move(event) {
                            let { x, y } = event.target.dataset;

                            x = parseFloat(x) || 0;
                            y = parseFloat(y) || 0;

                            Object.assign(event.target.style, {
                                width: `${event.rect.width}px`,
                                height: `${event.rect.height}px`,
                                transform: `translate(${x + event.deltaRect.left}px, ${y + event.deltaRect.top}px)`
                            });

                            Object.assign(event.target.dataset, {
                                x: x + event.deltaRect.left,
                                y: y + event.deltaRect.top
                            });

                            // Actualizar propiedades si están visibles
                            updatePropertiesPanel();
                        }
                    },
                    modifiers: [
                        interact.modifiers.restrictEdges({
                            outer: 'parent'
                        }),
                        interact.modifiers.restrictSize({
                            min: { width: 30, height: 30 }
                        })
                    ]
                });

            element.addEventListener('mousedown', function(e) {
                // Evitar que el evento se propague al canvas
                e.stopPropagation();
                setActiveElement(this);
            });

            // Hacer que los elementos de texto sean más fáciles de seleccionar
            if (element.querySelector('p')) {
                const textElement = element.querySelector('p');
                textElement.addEventListener('click', function(e) {
                    e.stopPropagation();
                    setActiveElement(element);
                });

                // Actualizar el contenido cuando se edita
                textElement.addEventListener('input', function() {
                    if (activeElement === element) {
                        updatePropertiesPanel();
                    }
                });
            }
        }

        function setActiveElement(element) {
            if (activeElement) {
                activeElement.classList.remove('active');
            }

            if (element) {
                element.classList.add('active');
                activeElement = element;
                showPropertiesPanel();

                // Actualizar la selección en la lista de capas
                updateLayersSelection();
            } else {
                activeElement = null;
                hidePropertiesPanel();
            }
        }

        function showPropertiesPanel() {
            propertiesPanel.classList.remove('hidden');

            // Ocultar todos los paneles de propiedades específicos
            textProperties.classList.add('hidden');
            shapeProperties.classList.add('hidden');
            imageProperties.classList.add('hidden');

            // Mostrar el panel correspondiente al tipo de elemento
            if (activeElement) {
                const tipo = activeElement.getAttribute('data-tipo');

                if (tipo === 'texto') {
                    textProperties.classList.remove('hidden');
                } else if (tipo === 'forma') {
                    shapeProperties.classList.remove('hidden');
                } else if (tipo === 'imagen') {
                    imageProperties.classList.remove('hidden');
                }

                updatePropertiesPanel();
            }
        }

        function hidePropertiesPanel() {
            propertiesPanel.classList.add('hidden');
        }

        function updatePropertiesPanel() {
            if (!activeElement) return;

            const tipo = activeElement.getAttribute('data-tipo');

            if (tipo === 'texto') {
                const textElement = activeElement.querySelector('p');
                if (textElement) {
                    // Actualizar contenido
                    document.getElementById('text-content').value = textElement.innerText;

                    // Obtener color de texto
                    const computedStyle = window.getComputedStyle(textElement);
                    const textColor = computedStyle.color;
                    const rgbToHex = (rgb) => {
                        const [r, g, b] = rgb.match(/\d+/g);
                        return "#" + ((1 << 24) + (parseInt(r) << 16) + (parseInt(g) << 8) + parseInt(b)).toString(16).slice(1);
                    };
                    document.getElementById('text-color').value = rgbToHex(textColor);

                    // Obtener tamaño de fuente
                    const fontSize = parseInt(computedStyle.fontSize);
                    document.getElementById('font-size').value = fontSize;
                }
            } else if (tipo === 'forma') {
                // Obtener color de fondo
                const bgColor = activeElement.style.backgroundColor;
                if (bgColor) {
                    const rgbToHex = (rgb) => {
                        if (!rgb || rgb === 'transparent') return '#ffffff';
                        const [r, g, b] = rgb.match(/\d+/g);
                        return "#" + ((1 << 24) + (parseInt(r) << 16) + (parseInt(g) << 8) + parseInt(b)).toString(16).slice(1);
                    };
                    document.getElementById('shape-bg-color').value = rgbToHex(bgColor);
                }

                // Obtener color de borde
                const borderColor = activeElement.style.borderColor;
                if (borderColor) {
                    const rgbToHex = (rgb) => {
                        if (!rgb || rgb === 'transparent') return '#000000';
                        const [r, g, b] = rgb.match(/\d+/g);
                        return "#" + ((1 << 24) + (parseInt(r) << 16) + (parseInt(g) << 8) + parseInt(b)).toString(16).slice(1);
                    };
                    document.getElementById('shape-border-color').value = rgbToHex(borderColor);
                }

                // Obtener dimensiones
                document.getElementById('shape-width').value = parseInt(activeElement.style.width);
                document.getElementById('shape-height').value = parseInt(activeElement.style.height);

                // Obtener radio de borde
                const borderRadius = parseInt(activeElement.style.borderRadius);
                document.getElementById('shape-radius').value = isNaN(borderRadius) ? 0 : borderRadius;
            } else if (tipo === 'imagen') {
                const imgElement = activeElement.querySelector('img');
                if (imgElement) {
                    // Actualizar URL
                    document.getElementById('image-url').value = imgElement.src;

                    // Obtener dimensiones
                    document.getElementById('image-width').value = parseInt(activeElement.style.width);
                    document.getElementById('image-height').value = parseInt(activeElement.style.height);

                    // Obtener radio de borde
                    const borderRadius = parseInt(activeElement.style.borderRadius);
                    document.getElementById('image-radius').value = isNaN(borderRadius) ? 0 : borderRadius;
                }
            }
        }

        // Actualizar propiedades cuando cambian los inputs
        document.getElementById('text-content').addEventListener('input', function() {
            if (activeElement && activeElement.getAttribute('data-tipo') === 'texto') {
                const textElement = activeElement.querySelector('p');
                if (textElement) {
                    textElement.innerText = this.value;
                }
            }
        });

        document.getElementById('text-color').addEventListener('input', function() {
            if (activeElement && activeElement.getAttribute('data-tipo') === 'texto') {
                const textElement = activeElement.querySelector('p');
                if (textElement) {
                    textElement.style.color = this.value;
                }
            }
        });

        document.getElementById('font-size').addEventListener('input', function() {
            if (activeElement && activeElement.getAttribute('data-tipo') === 'texto') {
                const textElement = activeElement.querySelector('p');
                if (textElement) {
                    textElement.style.fontSize = `${this.value}px`;
                }
            }
        });

        document.getElementById('align-left').addEventListener('click', function() {
            if (activeElement && activeElement.getAttribute('data-tipo') === 'texto') {
                const textElement = activeElement.querySelector('p');
                if (textElement) {
                    textElement.style.textAlign = 'left';
                }
            }
        });

        document.getElementById('align-center').addEventListener('click', function() {
            if (activeElement && activeElement.getAttribute('data-tipo') === 'texto') {
                const textElement = activeElement.querySelector('p');
                if (textElement) {
                    textElement.style.textAlign = 'center';
                }
            }
        });

        document.getElementById('align-right').addEventListener('click', function() {
            if (activeElement && activeElement.getAttribute('data-tipo') === 'texto') {
                const textElement = activeElement.querySelector('p');
                if (textElement) {
                    textElement.style.textAlign = 'right';
                }
            }
        });

        document.getElementById('shape-bg-color').addEventListener('input', function() {
            if (activeElement && activeElement.getAttribute('data-tipo') === 'forma') {
                activeElement.style.backgroundColor = this.value;
            }
        });

        document.getElementById('shape-border-color').addEventListener('input', function() {
            if (activeElement && activeElement.getAttribute('data-tipo') === 'forma') {
                activeElement.style.borderColor = this.value;
            }
        });

        document.getElementById('shape-width').addEventListener('input', function() {
            if (activeElement && activeElement.getAttribute('data-tipo') === 'forma') {
                activeElement.style.width = `${this.value}px`;
            }
        });

        document.getElementById('shape-height').addEventListener('input', function() {
            if (activeElement && activeElement.getAttribute('data-tipo') === 'forma') {
                activeElement.style.height = `${this.value}px`;
            }
        });

        document.getElementById('shape-radius').addEventListener('input', function() {
            if (activeElement && activeElement.getAttribute('data-tipo') === 'forma') {
                activeElement.style.borderRadius = `${this.value}px`;
            }
        });

        document.getElementById('image-url').addEventListener('input', function() {
            if (activeElement && activeElement.getAttribute('data-tipo') === 'imagen') {
                const imgElement = activeElement.querySelector('img');
                if (imgElement) {
                    imgElement.src = this.value;
                    activeElement.setAttribute('data-src', this.value);
                }
            }
        });

        document.getElementById('image-width').addEventListener('input', function() {
            if (activeElement && activeElement.getAttribute('data-tipo') === 'imagen') {
                activeElement.style.width = `${this.value}px`;
            }
        });

        document.getElementById('image-height').addEventListener('input', function() {
            if (activeElement && activeElement.getAttribute('data-tipo') === 'imagen') {
                activeElement.style.height = `${this.value}px`;
            }
        });

        document.getElementById('image-radius').addEventListener('input', function() {
            if (activeElement && activeElement.getAttribute('data-tipo') === 'imagen') {
                activeElement.style.borderRadius = `${this.value}px`;
            }
        });

        // Controles de capas
        document.getElementById('bring-forward').addEventListener('click', function() {
            if (activeElement) {
                const currentZ = parseInt(activeElement.style.zIndex) || 0;
                activeElement.style.zIndex = currentZ + 1;
                updateLayersList();
            }
        });

        document.getElementById('send-backward').addEventListener('click', function() {
            if (activeElement) {
                const currentZ = parseInt(activeElement.style.zIndex) || 0;
                if (currentZ > 0) {
                    activeElement.style.zIndex = currentZ - 1;
                    updateLayersList();
                }
            }
        });

        document.getElementById('bring-to-front').addEventListener('click', function() {
            if (activeElement) {
                // Encontrar el zIndex más alto
                let maxZ = 0;
                document.querySelectorAll('.canvas-element').forEach(el => {
                    const elZ = parseInt(el.style.zIndex) || 0;
                    if (elZ > maxZ) maxZ = elZ;
                });

                activeElement.style.zIndex = maxZ + 1;
                updateLayersList();
            }
        });

        document.getElementById('send-to-back').addEventListener('click', function() {
            if (activeElement) {
                // Encontrar el zIndex más bajo
                let minZ = Infinity;
                document.querySelectorAll('.canvas-element').forEach(el => {
                    if (el !== activeElement) {
                        const elZ = parseInt(el.style.zIndex) || 0;
                        if (elZ < minZ) minZ = elZ;
                    }
                });

                if (minZ === Infinity) minZ = 0;
                activeElement.style.zIndex = minZ - 1;
                updateLayersList();
            }
        });

        // Deseleccionar al hacer clic en un espacio en blanco
        canvas.addEventListener('click', function(e) {
            if (e.target === canvas && !isDragging) {
                setActiveElement(null);
            }
        });

        function addElement(type, content = '') {
            const element = document.createElement('div');
            element.className = 'canvas-element';
            element.setAttribute('data-tipo', type);
            element.style.zIndex = ++zIndex;

            switch(type) {
                case 'text':
                    element.innerHTML = `<p contenteditable="true">${content || 'Texto editable'}</p>`;
                    element.style.minWidth = '100px';
                    element.style.minHeight = '50px';
                    break;
                case 'image':
                    element.innerHTML = `<img src="${content || 'https://via.placeholder.com/150'}" alt="Imagen" style="width: 100%; height: 100%; object-fit: cover;">`;
                    element.style.width = '200px';
                    element.style.height = '150px';
                    element.setAttribute('data-src', content || 'https://via.placeholder.com/150');
                    break;
                case 'shape':
                    element.style.width = '100px';
                    element.style.height = '100px';
                    element.style.backgroundColor = '#4361ee';
                    element.style.borderRadius = '0px';
                    break;
                case 'line':
                    element.style.width = '200px';
                    element.style.height = '4px';
                    element.style.backgroundColor = '#4361ee';
                    break;
            }

            // Posicionar el elemento en el centro del canvas visible
            const canvasRect = canvas.getBoundingClientRect();
            const containerRect = canvasContainer.getBoundingClientRect();

            const centerX = (containerRect.width / 2 - canvasRect.left) / scale;
            const centerY = (containerRect.height / 2 - canvasRect.top) / scale;

            element.style.transform = `translate(${centerX - 50}px, ${centerY - 25}px)`;
            element.setAttribute('data-x', centerX - 50);
            element.setAttribute('data-y', centerY - 25);

            canvas.appendChild(element);
            makeElementInteractive(element);
            setActiveElement(element);

            // Actualizar la lista de capas
            updateLayersList();
        }

        addTextBtn.addEventListener('click', () => addElement('text'));
        addShapeBtn.addEventListener('click', () => addElement('shape'));
        addLineBtn.addEventListener('click', () => addElement('line'));

        deleteElementBtn.addEventListener('click', function() {
            if (activeElement) {
                canvas.removeChild(activeElement);
                activeElement = null;
                hidePropertiesPanel();
                updateLayersList();
            }
        });

        document.getElementById('zoom-in').addEventListener('click', function() {
            scale *= 1.2;
            canvas.style.transform = `scale(${scale})`;
        });

        document.getElementById('zoom-out').addEventListener('click', function() {
            scale /= 1.2;
            canvas.style.transform = `scale(${scale})`;
        });

        document.getElementById('zoom-reset').addEventListener('click', function() {
            scale = 0.6;
            canvas.style.transform = `scale(${scale})`;
        });

        // Zoom con Ctrl + rueda del ratón
        canvasContainer.addEventListener('wheel', function(e) {
            if (e.ctrlKey) {
                e.preventDefault();
                const delta = e.deltaY;
                if (delta > 0) {
                    scale = Math.max(0.1, scale / 1.1);
                } else {
                    scale = Math.min(2, scale * 1.1);
                }
                canvas.style.transform = `scale(${scale})`;
            }
        });

        saveProjectBtn.addEventListener('click', function() {
            Swal.fire({
                title: 'Guardar Proyecto',
                html: `
                    <div class="mb-3">
                        <label class="block text-sm font-medium text-gray-700 mb-1">Nombre del proyecto</label>
                        <input type="text" id="project-name" class="w-full p-2 border rounded" placeholder="Mi proyecto">
                    </div>
                `,
                showCancelButton: true,
                confirmButtonText: 'Guardar',
                cancelButtonText: 'Cancelar',
                confirmButtonColor: '#4361ee',
                preConfirm: () => {
                    const projectName = document.getElementById('project-name').value;
                    return { projectName };
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        icon: 'success',
                        title: '¡Proyecto guardado!',
                        text: 'Tu proyecto se ha guardado correctamente.',
                        confirmButtonText: 'Aceptar',
                        confirmButtonColor: '#4361ee'
                    });
                }
            });
        });

        // Eliminar elemento con la tecla Suprimir
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Delete' && activeElement) {
                canvas.removeChild(activeElement);
                activeElement = null;
                hidePropertiesPanel();
                updateLayersList();
            }
        });

        // Gestión de capas
        function updateLayersList() {
            // Limpiar la lista
            layersList.innerHTML = '';

            // Obtener todos los elementos del canvas
            const elements = Array.from(canvas.querySelectorAll('.canvas-element'));

            // Ordenar por zIndex (de mayor a menor)
            elements.sort((a, b) => {
                const zIndexA = parseInt(a.style.zIndex) || 0;
                const zIndexB = parseInt(b.style.zIndex) || 0;
                return zIndexB - zIndexA;
            });

            // Crear elementos de la lista
            elements.forEach((element, index) => {
                const tipo = element.getAttribute('data-tipo');
                let nombre = '';
                let icono = '';

                switch(tipo) {
                    case 'texto':
                        const texto = element.querySelector('p')?.innerText || 'Texto';
                        nombre = texto.length > 20 ? texto.substring(0, 20) + '...' : texto;
                        icono = 'fa-font';
                        break;
                    case 'imagen':
                        nombre = 'Imagen';
                        icono = 'fa-image';
                        break;
                    case 'forma':
                        nombre = 'Forma';
                        icono = 'fa-shapes';
                        break;
                    case 'line':
                        nombre = 'Línea';
                        icono = 'fa-minus';
                        break;
                    default:
                        nombre = 'Elemento ' + (index + 1);
                        icono = 'fa-object-group';
                }

                const layerItem = document.createElement('div');
                layerItem.className = 'layer-item';
                layerItem.setAttribute('data-element-index', index);
                if (element === activeElement) {
                    layerItem.classList.add('active');
                }

                layerItem.innerHTML = `
                    <i class="fas ${icono} layer-icon"></i>
                    <span class="layer-name">${nombre}</span>
                    <div class="layer-actions">
                        <button class="layer-action layer-up" title="Subir capa"><i class="fas fa-arrow-up"></i></button>
                        <button class="layer-action layer-down" title="Bajar capa"><i class="fas fa-arrow-down"></i></button>
                        <button class="layer-action layer-delete" title="Eliminar"><i class="fas fa-trash"></i></button>
                    </div>
                `;

                layersList.appendChild(layerItem);

                // Añadir evento de clic para seleccionar el elemento
                layerItem.addEventListener('click', function(e) {
                    if (!e.target.closest('.layer-actions')) {
                        setActiveElement(element);
                    }
                });

                // Añadir eventos para los botones de acción
                const upBtn = layerItem.querySelector('.layer-up');
                const downBtn = layerItem.querySelector('.layer-down');
                const deleteBtn = layerItem.querySelector('.layer-delete');

                upBtn.addEventListener('click', function() {
                    const currentZ = parseInt(element.style.zIndex) || 0;
                    element.style.zIndex = currentZ + 1;
                    updateLayersList();
                });

                downBtn.addEventListener('click', function() {
                    const currentZ = parseInt(element.style.zIndex) || 0;
                    if (currentZ > 0) {
                        element.style.zIndex = currentZ - 1;
                        updateLayersList();
                    }
                });

                deleteBtn.addEventListener('click', function() {
                    canvas.removeChild(element);
                    if (element === activeElement) {
                        activeElement = null;
                        hidePropertiesPanel();
                    }
                    updateLayersList();
                });
            });
        }

        function updateLayersSelection() {
            // Actualizar la selección en la lista de capas
            document.querySelectorAll('.layer-item').forEach(item => {
                item.classList.remove('active');
            });

            if (activeElement) {
                const elements = Array.from(canvas.querySelectorAll('.canvas-element'));
                const index = elements.indexOf(activeElement);

                const layerItems = document.querySelectorAll('.layer-item');
                layerItems.forEach(item => {
                    const itemIndex = parseInt(item.getAttribute('data-element-index'));
                    if (itemIndex === index) {
                        item.classList.add('active');
                    }
                });
            }
        }

        // Botón para refrescar la lista de capas
        refreshLayersBtn.addEventListener('click', updateLayersList);

        // Inicializar la lista de capas
        updateLayersList();
    });
    </script>
</body>
</html>
